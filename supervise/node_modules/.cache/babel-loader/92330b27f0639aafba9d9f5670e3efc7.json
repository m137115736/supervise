{"remainingRequest":"E:\\甘润\\技术监督\\supervise\\node_modules\\babel-loader\\lib\\index.js!E:\\甘润\\技术监督\\supervise\\src\\libs\\verifyCode.js","dependencies":[{"path":"E:\\甘润\\技术监督\\supervise\\src\\libs\\verifyCode.js","mtime":1612232342529},{"path":"E:\\甘润\\技术监督\\supervise\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623122841293},{"path":"E:\\甘润\\技术监督\\supervise\\node_modules\\babel-loader\\lib\\index.js","mtime":1623122859414}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\n\nfunction GVerify(options) {\n  // 创建一个图形验证码对象，接收options对象为参数\n  this.options = {\n    // 默认options参数值\n    id: '',\n    // 容器Id\n    canvasId: 'verifyCanvas',\n    // canvas的ID\n    width: '60',\n    // 默认canvas宽度\n    height: '30',\n    // 默认canvas高度\n    type: 'number',\n    // 图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\n    code: ''\n  };\n\n  if (Object.prototype.toString.call(options) === '[object Object]') {\n    // 判断传入参数类型\n    for (var i in options) {\n      // 根据传入的参数，修改默认参数值\n      this.options[i] = options[i];\n    }\n  } else {\n    this.options.id = options;\n  }\n\n  this.options.numArr = '0,1,2,3,4,5,6,7,8,9'.split(',');\n  this.options.letterArr = getAllLetter();\n\n  this._init();\n\n  this.refresh();\n}\n\nGVerify.prototype = {\n  /** 版本号**/\n  version: '1.0.0',\n\n  /** 初始化方法**/\n  _init: function _init() {\n    var con = document.getElementById(this.options.id);\n    var canvas = document.createElement('canvas'); // this.options.width = con.offsetWidth > 0 ? con.offsetWidth : '30'\n    // this.options.height = con.offsetHeight > 0 ? con.offsetHeight : '30'\n\n    this.options.width = '96';\n    this.options.height = '40';\n    canvas.id = this.options.canvasId;\n    canvas.width = this.options.width;\n    canvas.height = this.options.height;\n    canvas.style.cursor = 'pointer';\n    canvas.innerHTML = '您的浏览器版本不支持canvas';\n    con.appendChild(canvas);\n    var parent = this;\n\n    canvas.onclick = function () {\n      parent.refresh();\n    };\n  },\n\n  /** 生成验证码**/\n  refresh: function refresh() {\n    this.options.code = '';\n    var canvas = document.getElementById(this.options.canvasId);\n\n    if (canvas.getContext) {\n      var ctx = canvas.getContext('2d');\n    }\n\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = randomColor(180, 240);\n    ctx.fillRect(0, 0, this.options.width, this.options.height);\n    var txtArr = '';\n\n    if (this.options.type === 'blend') {\n      // 判断验证码类型\n      txtArr = this.options.numArr.concat(this.options.letterArr);\n    } else if (this.options.type === 'number') {\n      txtArr = this.options.numArr;\n    } else {\n      txtArr = this.options.letterArr;\n    }\n\n    for (var i = 1; i <= 4; i++) {\n      var txt = txtArr[randomNum(0, txtArr.length)];\n      this.options.code += txt;\n      ctx.font = randomNum(this.options.height / 2, this.options.height) + 'px SimHei'; // 随机生成字体大小\n\n      ctx.fillStyle = randomColor(50, 160); // 随机生成字体颜色\n\n      ctx.shadowOffsetX = randomNum(-3, 3);\n      ctx.shadowOffsetY = randomNum(-3, 3);\n      ctx.shadowBlur = randomNum(-3, 3);\n      ctx.shadowColor = 'rgba(0, 0, 0, 0.3)';\n      var x = this.options.width / 5 * i;\n      var y = this.options.height / 2;\n      var deg = randomNum(-30, 30);\n      /** 设置旋转角度和坐标原点**/\n\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0);\n      /** 恢复旋转角度和坐标原点**/\n\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    }\n    /** 绘制干扰线**/\n\n\n    for (var w = 0; w < 4; w++) {\n      ctx.strokeStyle = randomColor(40, 180);\n      ctx.beginPath();\n      ctx.moveTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n      ctx.lineTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n      ctx.stroke();\n    }\n    /** 绘制干扰点**/\n\n\n    for (var e = 0; e < this.options.width / 4; e++) {\n      ctx.fillStyle = randomColor(0, 255);\n      ctx.beginPath();\n      ctx.arc(randomNum(0, this.options.width), randomNum(0, this.options.height), 1, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n  },\n\n  /** 验证验证码**/\n  validate: function validate(code) {\n    var codeE = code.toLowerCase();\n    var v_code = this.options.code.toLowerCase();\n\n    if (codeE == v_code) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  /** 生成字母数组**/\n\n};\n\nfunction getAllLetter() {\n  var letterStr = 'a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z';\n  return letterStr.split(',');\n}\n/** 生成一个随机数**/\n\n\nfunction randomNum(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n/** 生成一个随机色**/\n\n\nfunction randomColor(min, max) {\n  var r = randomNum(min, max);\n  var g = randomNum(min, max);\n  var b = randomNum(min, max);\n  return 'rgb(' + r + ',' + g + ',' + b + ')';\n}\n\nexport { GVerify };",{"version":3,"sources":["E:\\甘润\\技术监督\\supervise\\src\\libs\\verifyCode.js"],"names":["GVerify","options","id","canvasId","width","height","type","code","Object","prototype","toString","call","i","numArr","split","letterArr","getAllLetter","_init","refresh","version","con","document","getElementById","canvas","createElement","style","cursor","innerHTML","appendChild","parent","onclick","getContext","ctx","textBaseline","fillStyle","randomColor","fillRect","txtArr","concat","txt","randomNum","length","font","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","deg","translate","rotate","Math","PI","fillText","w","strokeStyle","beginPath","moveTo","lineTo","stroke","e","arc","fill","validate","codeE","toLowerCase","v_code","letterStr","min","max","floor","random","r","g","b"],"mappings":"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","sourcesContent":["function GVerify(options) { // 创建一个图形验证码对象，接收options对象为参数\r\n\tthis.options = { // 默认options参数值\r\n\t\tid: '', // 容器Id\r\n\t\tcanvasId: 'verifyCanvas', // canvas的ID\r\n\t\twidth: '60', // 默认canvas宽度\r\n\t\theight: '30', // 默认canvas高度\r\n\t\ttype: 'number', // 图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\r\n\t\tcode: ''\r\n\t}\r\n\r\n\tif (Object.prototype.toString.call(options) === '[object Object]') { // 判断传入参数类型\r\n\t\tfor (var i in options) { // 根据传入的参数，修改默认参数值\r\n\t\t\tthis.options[i] = options[i]\r\n\t\t}\r\n\t} else {\r\n\t\tthis.options.id = options\r\n\t}\r\n\r\n\tthis.options.numArr = '0,1,2,3,4,5,6,7,8,9'.split(',')\r\n\tthis.options.letterArr = getAllLetter()\r\n\r\n\tthis._init()\r\n\tthis.refresh()\r\n}\r\n\r\nGVerify.prototype = {\r\n\t/** 版本号**/\r\n\tversion: '1.0.0',\r\n\t/** 初始化方法**/\r\n\t_init: function() {\r\n\t\tvar con = document.getElementById(this.options.id)\r\n\t\tvar canvas = document.createElement('canvas')\r\n\t\t// this.options.width = con.offsetWidth > 0 ? con.offsetWidth : '30'\r\n\t\t// this.options.height = con.offsetHeight > 0 ? con.offsetHeight : '30'\r\n\t\tthis.options.width = '96'\r\n\t\tthis.options.height = '40'\r\n\t\tcanvas.id = this.options.canvasId\r\n\t\tcanvas.width = this.options.width\r\n\t\tcanvas.height = this.options.height\r\n\t\tcanvas.style.cursor = 'pointer'\r\n\t\tcanvas.innerHTML = '您的浏览器版本不支持canvas'\r\n\t\tcon.appendChild(canvas)\r\n\t\tvar parent = this\r\n\t\tcanvas.onclick = function() {\r\n\t\t\tparent.refresh()\r\n\t\t}\r\n\t},\r\n\r\n\t/** 生成验证码**/\r\n\trefresh: function() {\r\n\t\tthis.options.code = '';\r\n\t\tvar canvas = document.getElementById(this.options.canvasId)\r\n\t\tif (canvas.getContext) {\r\n\t\t\tvar ctx = canvas.getContext('2d')\r\n\t\t}\r\n\t\tctx.textBaseline = 'middle'\r\n\t\tctx.fillStyle = randomColor(180, 240)\r\n\t\tctx.fillRect(0, 0, this.options.width, this.options.height)\r\n\t\tvar txtArr = '';\r\n\t\tif (this.options.type === 'blend') { // 判断验证码类型\r\n\t\t\ttxtArr = this.options.numArr.concat(this.options.letterArr)\r\n\t\t} else if (this.options.type === 'number') {\r\n\t\t\ttxtArr = this.options.numArr\r\n\t\t} else {\r\n\t\t\ttxtArr = this.options.letterArr\r\n\t\t}\r\n\t\tfor (var i = 1; i <= 4; i++) {\r\n\t\t\tvar txt = txtArr[randomNum(0, txtArr.length)]\r\n\t\t\tthis.options.code += txt\r\n\t\t\tctx.font = randomNum(this.options.height / 2, this.options.height) + 'px SimHei' // 随机生成字体大小\r\n\t\t\tctx.fillStyle = randomColor(50, 160) // 随机生成字体颜色\r\n\t\t\tctx.shadowOffsetX = randomNum(-3, 3)\r\n\t\t\tctx.shadowOffsetY = randomNum(-3, 3)\r\n\t\t\tctx.shadowBlur = randomNum(-3, 3)\r\n\t\t\tctx.shadowColor = 'rgba(0, 0, 0, 0.3)'\r\n\t\t\tvar x = this.options.width / 5 * i\r\n\t\t\tvar y = this.options.height / 2\r\n\t\t\tvar deg = randomNum(-30, 30)\r\n\t\t\t/** 设置旋转角度和坐标原点**/\r\n\t\t\tctx.translate(x, y)\r\n\t\t\tctx.rotate(deg * Math.PI / 180)\r\n\t\t\tctx.fillText(txt, 0, 0)\r\n\t\t\t/** 恢复旋转角度和坐标原点**/\r\n\t\t\tctx.rotate(-deg * Math.PI / 180)\r\n\t\t\tctx.translate(-x, -y)\r\n\t\t}\r\n\t\t/** 绘制干扰线**/\r\n\t\tfor (var w = 0; w < 4; w++) {\r\n\t\t\tctx.strokeStyle = randomColor(40, 180)\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.moveTo(randomNum(0, this.options.width), randomNum(0, this.options.height))\r\n\t\t\tctx.lineTo(randomNum(0, this.options.width), randomNum(0, this.options.height))\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\t\t/** 绘制干扰点**/\r\n\t\tfor (var e = 0; e < this.options.width / 4; e++) {\r\n\t\t\tctx.fillStyle = randomColor(0, 255)\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.arc(randomNum(0, this.options.width), randomNum(0, this.options.height), 1, 0, 2 * Math.PI)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t},\r\n\t/** 验证验证码**/\r\n\tvalidate: function(code) {\r\n\t\tvar codeE = code.toLowerCase()\r\n\t\tvar v_code = this.options.code.toLowerCase()\r\n\t\tif (codeE == v_code) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n}\r\n/** 生成字母数组**/\r\nfunction getAllLetter() {\r\n\tvar letterStr =\r\n\t\t'a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z'\r\n\treturn letterStr.split(',')\r\n}\r\n/** 生成一个随机数**/\r\nfunction randomNum(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min) + min)\r\n}\r\n/** 生成一个随机色**/\r\nfunction randomColor(min, max) {\r\n\tvar r = randomNum(min, max)\r\n\tvar g = randomNum(min, max)\r\n\tvar b = randomNum(min, max)\r\n\treturn 'rgb(' + r + ',' + g + ',' + b + ')'\r\n}\r\n\r\nexport {\r\n\tGVerify\r\n}\n"]}]}