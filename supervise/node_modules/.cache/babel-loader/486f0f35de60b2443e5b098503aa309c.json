{"remainingRequest":"E:\\甘润\\技术监督\\supervise\\node_modules\\babel-loader\\lib\\index.js!E:\\甘润\\技术监督\\supervise\\src\\request\\request.js","dependencies":[{"path":"E:\\甘润\\技术监督\\supervise\\src\\request\\request.js","mtime":1623842727781},{"path":"E:\\甘润\\技术监督\\supervise\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623122841293},{"path":"E:\\甘润\\技术监督\\supervise\\node_modules\\babel-loader\\lib\\index.js","mtime":1623122859414}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.index-of\";\nimport axios from 'axios';\nimport { Message } from 'view-design'; // 请求超时\n\naxios.defaults.timeout = 10000; //设置超时时间为10s```\n// #post请求方式请求头\n\naxios.defaults.headers.post['Content-Type'] = 'application/json'; // 请求地址\n\naxios.defaults.baseURL = 'localhost:8080/'; // 响应拦截\n\naxios.interceptors.response.use(function (res) {\n  // 响应数据\n  if (res.data.status === '200') {\n    return Promise.resolve(res);\n  }\n\n  return res;\n}, function (error) {\n  if (error.toString().indexOf('401') > 0) {} else if (error.toString().indexOf('400') > 0) {\n    console.log('请求相关参数错误');\n  } else if (error.toString().indexOf('408') > 0) {\n    console.log('请求超时');\n  } else if (error.toString().indexOf('404') > 0) {\n    console.log('请检查网络情况或请求url');\n  } else if (error.toString().indexOf('500') > 0) {\n    console.log('GG 500 - _ -');\n  }\n\n  Message.error('系统发生异常，请联系管理员');\n  return Promise.reject(error);\n  reject(error);\n});\n/**\r\n * get方法，对应get请求\r\n * @param {String} url [请求的url地址]\r\n * @param {Object} params [请求时携带的参数]\r\n */\n\nexport function get(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.data);\n    });\n  });\n}\n;\n/** \r\n * post方法，对应post请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\n\nexport function post(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.post(url, params).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err.data);\n    });\n  });\n}",{"version":3,"sources":["E:\\甘润\\技术监督\\supervise\\src\\request\\request.js"],"names":["axios","Message","defaults","timeout","headers","post","baseURL","interceptors","response","use","res","data","status","Promise","resolve","error","toString","indexOf","console","log","reject","get","url","params","then","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,OADD,QAEO,aAFP,C,CAIA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,KAAzB,C,CAAgC;AAEhC;;AACAH,KAAK,CAACE,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C,C,CAEA;;AACAL,KAAK,CAACE,QAAN,CAAeI,OAAf,GAAyB,iBAAzB,C,CAEA;;AACAN,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAACC,GAAD,EAAS;AACxC;AACA,MAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,KAAxB,EAA+B;AAC9B,WAAOC,OAAO,CAACC,OAAR,CAAgBJ,GAAhB,CAAP;AACA;;AACD,SAAOA,GAAP;AACA,CAND,EAMG,UAACK,KAAD,EAAW;AACb,MAAIA,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,KAAzB,IAAkC,CAAtC,EAAyC,CAExC,CAFD,MAEO,IAAIF,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,KAAzB,IAAkC,CAAtC,EAAyC;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,GAFM,MAEA,IAAIJ,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,KAAzB,IAAkC,CAAtC,EAAyC;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,GAFM,MAEA,IAAIJ,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,KAAzB,IAAkC,CAAtC,EAAyC;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,GAFM,MAEA,IAAIJ,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,KAAzB,IAAkC,CAAtC,EAAyC;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;AACDlB,EAAAA,OAAO,CAACc,KAAR,CAAc,eAAd;AACA,SAAOF,OAAO,CAACO,MAAR,CAAeL,KAAf,CAAP;AACAK,EAAAA,MAAM,CAACL,KAAD,CAAN;AACA,CArBD;AAuBA;;;;;;AAKA,OAAO,SAASM,GAAT,CAAaC,GAAb,EAAkBC,MAAlB,EAA0B;AAChC,SAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUM,MAAV,EAAqB;AACvCpB,IAAAA,KAAK,CAACqB,GAAN,CAAUC,GAAV,EAAe;AACdC,MAAAA,MAAM,EAAEA;AADM,KAAf,EAEGC,IAFH,CAEQ,UAAAd,GAAG,EAAI;AACdI,MAAAA,OAAO,CAACJ,GAAG,CAACC,IAAL,CAAP;AACA,KAJD,EAIGc,KAJH,CAIS,UAAAC,GAAG,EAAI;AACfN,MAAAA,MAAM,CAACM,GAAG,CAACf,IAAL,CAAN;AACA,KAND;AAOA,GARM,CAAP;AASA;AAAA;AACD;;;;;;AAKA,OAAO,SAASN,IAAT,CAAciB,GAAd,EAAmBC,MAAnB,EAA2B;AACjC,SAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUM,MAAV,EAAqB;AACvCpB,IAAAA,KAAK,CAACK,IAAN,CAAWiB,GAAX,EAAgBC,MAAhB,EACEC,IADF,CACO,UAAAd,GAAG,EAAI;AACZI,MAAAA,OAAO,CAACJ,GAAG,CAACC,IAAL,CAAP;AACA,KAHF,EAIEc,KAJF,CAIQ,UAAAC,GAAG,EAAI;AACbN,MAAAA,MAAM,CAACM,GAAG,CAACf,IAAL,CAAN;AACA,KANF;AAOA,GARM,CAAP;AASA","sourcesContent":["import axios from 'axios';\r\nimport {\r\n\tMessage\r\n} from 'view-design';\r\n\r\n// 请求超时\r\naxios.defaults.timeout = 10000; //设置超时时间为10s```\r\n\r\n// #post请求方式请求头\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n// 请求地址\r\naxios.defaults.baseURL = 'localhost:8080/';\r\n\r\n// 响应拦截\r\naxios.interceptors.response.use((res) => {\r\n\t// 响应数据\r\n\tif (res.data.status === '200') {\r\n\t\treturn Promise.resolve(res)\r\n\t}\r\n\treturn res\r\n}, (error) => {\r\n\tif (error.toString().indexOf('401') > 0) {\r\n\r\n\t} else if (error.toString().indexOf('400') > 0) {\r\n\t\tconsole.log('请求相关参数错误');\r\n\t} else if (error.toString().indexOf('408') > 0) {\r\n\t\tconsole.log('请求超时');\r\n\t} else if (error.toString().indexOf('404') > 0) {\r\n\t\tconsole.log('请检查网络情况或请求url');\r\n\t} else if (error.toString().indexOf('500') > 0) {\r\n\t\tconsole.log('GG 500 - _ -');\r\n\t}\r\n\tMessage.error('系统发生异常，请联系管理员');\r\n\treturn Promise.reject(error);\r\n\treject(error)\r\n})\r\n\r\n/**\r\n * get方法，对应get请求\r\n * @param {String} url [请求的url地址]\r\n * @param {Object} params [请求时携带的参数]\r\n */\r\nexport function get(url, params) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.get(url, {\r\n\t\t\tparams: params\r\n\t\t}).then(res => {\r\n\t\t\tresolve(res.data);\r\n\t\t}).catch(err => {\r\n\t\t\treject(err.data)\r\n\t\t})\r\n\t})\r\n};\r\n/** \r\n * post方法，对应post请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function post(url, params) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.post(url, params)\r\n\t\t\t.then(res => {\r\n\t\t\t\tresolve(res.data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\treject(err.data)\r\n\t\t\t})\r\n\t});\r\n}\n"]}]}